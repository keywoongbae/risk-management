bwidth <- breaks[2]-breaks[1]
df <- data.frame(agg.losses)
X <- df$agg.losses
ggplot(df,aes(agg.losses))+geom_histogram(binwidth=bwidth,fill="white",colour="deepskyblue4")
plotdist(X)
plotdist(log(X))
nbinom.est
lnorm_model
gpd.model
# (3) LDA with MCMC simulation
ind.losses <- Z
plotdist(ind.losses)
loss.amounts <- matrix(ind.losses, ncol = max.claim.count)
length(ind.losses)
max.claim.count
loss.matrix <- cbind(claim.count,loss.amounts)
head(loss.matrix)
head(loss.matrix)
Set.zeroes = function(x) {
multiplier <- c(rep(1,x[1]), rep(0,length(x) -1-x[1]))
x <- x[-1]*multiplier
}
losses <- t(apply(loss.matrix, 1, Set.zeroes))  ### transpose the matrix
agg.losses <- apply(losses, 1, sum)
breaks <- pretty(range(agg.losses), n = nclass.FD(agg.losses), min.n = 1)
bwidth <- breaks[2]-breaks[1]
df <- data.frame(agg.losses)
X <- df$agg.losses
ggplot(df,aes(agg.losses))+geom_histogram(binwidth=bwidth,fill="white",colour="deepskyblue4")
plotdist(log(X))
perc <- c(0.25, 0.5, 0.75, 0.8, 0.85, 0.9, 0.95, 0.98, 0.99, 0.995, 0.999)
gross <- c(quantile(agg.losses, probs = perc), mean(agg.losses), sd(agg.losses))
Percentile <- c(perc, "Mean", "SD")
results.table <- data.frame(Percentile, gross)
results.table
# (5) summary
mean(Z) # in paper, 43.9
sd(Z) # in paper, 429.9
mean(log(Z)) # in paper, mean(ln(Z)) is 0.8
sd(log(Z)) # in paper, std(ln(Z)) is 2.1
mean(X) # in paper, E[X] is 3.2
sd(X) # in paper, std(X) is 116.4
Z <- c(body_samples, tail_samples)
plotdist(Z)
mean(Z)
sd(Z)
# (2) truncate the severity distribution
Z <- pmin(Z, 50)
mean(Z)
sd(Z)
# (3) LDA with MCMC simulation
for (i in 1:10000){
N <- rnbinom(n_samples
,size=nbinom.est$estimate["size"]
, mu=nbinom.est$estimate["mu"] )
body <- rlnorm(N
, meanlog = lnorm_model$estimate["meanlog"]
, sdlog = lnorm_model$estimate["sdlog"])
body <- body[body <= threshold]
tail <- rgpd(N
, loc = 0
, scale = gpd.model$fitted.values["scale"]
, shape = gpd.model$fitted.values["shape"])
tail <- tail[tail >= threshold]
Z <- c(body, tail)
total_losses[i] <- sum(Z)
}
# (3) LDA with MCMC simulation
num_simulations <- 10000
total_losses <- numeric(num_simulations)
for (i in 1:num_simulations){
N <- rnbinom(n_samples
,size=nbinom.est$estimate["size"]
, mu=nbinom.est$estimate["mu"] )
body <- rlnorm(N
, meanlog = lnorm_model$estimate["meanlog"]
, sdlog = lnorm_model$estimate["sdlog"])
body <- body[body <= threshold]
tail <- rgpd(N
, loc = 0
, scale = gpd.model$fitted.values["scale"]
, shape = gpd.model$fitted.values["shape"])
tail <- tail[tail >= threshold]
Z <- c(body, tail)
total_losses[i] <- sum(Z)
}
mean_loss <- mean(total_losses)
quantiles <- quantile(total_losses, probs = c(0.5, 0.95, 0.99))
c(mean_loss)
plotdist(total_losses)
summary(total_losses)
# (3) LDA with MCMC simulation
num_simulations <- 10000
total_losses <- numeric(num_simulations)
for (i in 1:num_simulations){
N <- rnbinom(1
,size=nbinom.est$estimate["size"]
, mu=nbinom.est$estimate["mu"] )
body <- rlnorm(N
, meanlog = lnorm_model$estimate["meanlog"]
, sdlog = lnorm_model$estimate["sdlog"])
body <- body[body <= threshold]
tail <- rgpd(N
, loc = 0
, scale = gpd.model$fitted.values["scale"]
, shape = gpd.model$fitted.values["shape"])
tail <- tail[tail >= threshold]
Z <- c(body, tail)
total_losses[i] <- sum(Z)
}
mean_loss <- mean(total_losses)
quantiles <- quantile(total_losses, probs = c(0.5, 0.95, 0.99))
c(mean_loss)
summary(total_losses)
plotdist(total_losses)
# (3) LDA with MCMC simulation
num_simulations <- 50
total_losses <- numeric(num_simulations)
for (i in 1:num_simulations){
N <- rnbinom(1
,size=nbinom.est$estimate["size"]
, mu=nbinom.est$estimate["mu"] )
body <- rlnorm(N
, meanlog = lnorm_model$estimate["meanlog"]
, sdlog = lnorm_model$estimate["sdlog"])
body <- body[body <= threshold]
tail <- rgpd(N
, loc = 0
, scale = gpd.model$fitted.values["scale"]
, shape = gpd.model$fitted.values["shape"])
tail <- tail[tail >= threshold]
Z <- c(body, tail)
total_losses[i] <- sum(Z)
}
mean_loss <- mean(total_losses)
quantiles <- quantile(total_losses, probs = c(0.5, 0.95, 0.99))
c(mean_loss)
plotdist(total_losses)
Z <- body
total_losses[i] <- sum(Z)
# (3) LDA with MCMC simulation
num_simulations <- 50
total_losses <- numeric(num_simulations)
for (i in 1:num_simulations){
N <- rnbinom(1
,size=nbinom.est$estimate["size"]
, mu=nbinom.est$estimate["mu"] )
body <- rlnorm(N
, meanlog = lnorm_model$estimate["meanlog"]
, sdlog = lnorm_model$estimate["sdlog"])
#  body <- body[body <= threshold]
#  tail <- rgpd(N
#               , loc = 0
#               , scale = gpd.model$fitted.values["scale"]
#               , shape = gpd.model$fitted.values["shape"])
#  tail <- tail[tail >= threshold]
#  Z <- c(body, tail)
Z <- body
total_losses[i] <- sum(Z)
}
mean_loss <- mean(total_losses)
quantiles <- quantile(total_losses, probs = c(0.5, 0.95, 0.99))
c(mean_loss)
plotdist(total_losses)
N
N
# (3) LDA with MCMC simulation
num_simulations <- 50
total_losses <- numeric(num_simulations)
for (i in 1:num_simulations){
N <- rnbinom(1
,size=nbinom.est$estimate["size"]
, mu=nbinom.est$estimate["mu"] )
cat(N)
body <- rlnorm(N
, meanlog = lnorm_model$estimate["meanlog"]
, sdlog = lnorm_model$estimate["sdlog"])
#  body <- body[body <= threshold]
#  tail <- rgpd(N
#               , loc = 0
#               , scale = gpd.model$fitted.values["scale"]
#               , shape = gpd.model$fitted.values["shape"])
#  tail <- tail[tail >= threshold]
#  Z <- c(body, tail)
Z <- body
total_losses[i] <- sum(Z)
}
# (3) LDA with MCMC simulation
num_simulations <- 50
total_losses <- numeric(num_simulations)
for (i in 1:num_simulations){
N <- rnbinom(1
,size=nbinom.est$estimate["size"]
, mu=nbinom.est$estimate["mu"] )
print(N)
body <- rlnorm(N
, meanlog = lnorm_model$estimate["meanlog"]
, sdlog = lnorm_model$estimate["sdlog"])
#  body <- body[body <= threshold]
#  tail <- rgpd(N
#               , loc = 0
#               , scale = gpd.model$fitted.values["scale"]
#               , shape = gpd.model$fitted.values["shape"])
#  tail <- tail[tail >= threshold]
#  Z <- c(body, tail)
Z <- body
total_losses[i] <- sum(Z)
}
# (3) LDA with MCMC simulation
num_simulations <- 50
total_losses <- numeric(num_simulations)
for (i in 1:num_simulations){
N <- rnbinom(1
,size=nbinom.est$estimate["size"]
, mu=nbinom.est$estimate["mu"] )
#print(N)
body <- rlnorm(N
, meanlog = lnorm_model$estimate["meanlog"]
, sdlog = lnorm_model$estimate["sdlog"])
#  body <- body[body <= threshold]
#  tail <- rgpd(N
#               , loc = 0
#               , scale = gpd.model$fitted.values["scale"]
#               , shape = gpd.model$fitted.values["shape"])
#  tail <- tail[tail >= threshold]
#  Z <- c(body, tail)
Z <- body
total_losses[i] <- sum(Z)
}
mean_loss <- mean(total_losses)
quantiles <- quantile(total_losses, probs = c(0.5, 0.95, 0.99))
c(mean_loss)
# (3) LDA with MCMC simulation
num_simulations <- 50
total_losses <- numeric(num_simulations)
for (i in 1:num_simulations){
N <- rnbinom(1
,size=nbinom.est$estimate["size"]
, mu=nbinom.est$estimate["mu"] )
#print(N)
body <- rlnorm(N
, meanlog = lnorm_model$estimate["meanlog"]
, sdlog = lnorm_model$estimate["sdlog"])
#  body <- body[body <= threshold]
#  tail <- rgpd(N
#               , loc = 0
#               , scale = gpd.model$fitted.values["scale"]
#               , shape = gpd.model$fitted.values["shape"])
#  tail <- tail[tail >= threshold]
#  Z <- c(body, tail)
Z <- body
total_losses[i] <- sum(Z)
}
mean_loss <- mean(total_losses)
quantiles <- quantile(total_losses, probs = c(0.5, 0.95, 0.99))
c(mean_loss)
source("C:/Users/kwbae/OneDrive - postech.ac.kr/Repositories/risk-management-papers/code/Eling and Schnell (2020).r", echo=TRUE)
# (3) LDA with MCMC simulation
num_simulations <- 50
total_losses <- numeric(num_simulations)
for (i in 1:num_simulations){
N <- rnbinom(1
,size=nbinom.est$estimate["size"]
, mu=nbinom.est$estimate["mu"] )+1
#print(N)
body <- rlnorm(N
, meanlog = lnorm_model$estimate["meanlog"]
, sdlog = lnorm_model$estimate["sdlog"])
#  body <- body[body <= threshold]
#  tail <- rgpd(N
#               , loc = 0
#               , scale = gpd.model$fitted.values["scale"]
#               , shape = gpd.model$fitted.values["shape"])
#  tail <- tail[tail >= threshold]
#  Z <- c(body, tail)
Z <- body
total_losses[i] <- sum(Z)
}
mean_loss <- mean(total_losses)
quantiles <- quantile(total_losses, probs = c(0.5, 0.95, 0.99))
c(mean_loss)
for (i in 1:num_simulations){
N <- rnbinom(1
,size=nbinom.est$estimate["size"]
, mu=nbinom.est$estimate["mu"] )+1
print(N)
body <- rlnorm(N
, meanlog = lnorm_model$estimate["meanlog"]
, sdlog = lnorm_model$estimate["sdlog"])
#  body <- body[body <= threshold]
#  tail <- rgpd(N
#               , loc = 0
#               , scale = gpd.model$fitted.values["scale"]
#               , shape = gpd.model$fitted.values["shape"])
#  tail <- tail[tail >= threshold]
#  Z <- c(body, tail)
Z <- body
total_losses[i] <- sum(Z)
}
mean_loss <- mean(total_losses)
quantiles <- quantile(total_losses, probs = c(0.5, 0.95, 0.99))
c(mean_loss)
plotdist(total_losses)
# (3) LDA with MCMC simulation
num_simulations <- 50
total_losses <- numeric(num_simulations)
for (i in 1:num_simulations){
N <- rnbinom(1
,size=nbinom.est$estimate["size"]
, mu=nbinom.est$estimate["mu"] )+1
print(N)
body <- rlnorm(N
, meanlog = lnorm_model$estimate["meanlog"]
, sdlog = lnorm_model$estimate["sdlog"])
#  body <- body[body <= threshold]
#  tail <- rgpd(N
#               , loc = 0
#               , scale = gpd.model$fitted.values["scale"]
#               , shape = gpd.model$fitted.values["shape"])
#  tail <- tail[tail >= threshold]
#  Z <- c(body, tail)
Z <- body
total_losses[i] <- sum(Z)
}
mean_loss <- mean(total_losses)
quantiles <- quantile(total_losses, probs = c(0.5, 0.95, 0.99))
c(mean_loss)
plotdist(total_losses)
### (3) LDA with MCMC simulation
num_simulations <- 10000
total_losses <- numeric(num_simulations)
for (i in 1:num_simulations){
N <- rnbinom(1
,size=nbinom.est$estimate["size"]
, mu=nbinom.est$estimate["mu"] )+1
print(N)
body <- rlnorm(N
, meanlog = lnorm_model$estimate["meanlog"]
, sdlog = lnorm_model$estimate["sdlog"])
#  body <- body[body <= threshold]
#  tail <- rgpd(N
#               , loc = 0
#               , scale = gpd.model$fitted.values["scale"]
#               , shape = gpd.model$fitted.values["shape"])
#  tail <- tail[tail >= threshold]
#  Z <- c(body, tail)
Z <- body
total_losses[i] <- sum(Z)
}
mean_loss <- mean(total_losses)
quantiles <- quantile(total_losses, probs = c(0.5, 0.95, 0.99))
c(mean_loss)
### (3) LDA with MCMC simulation
num_simulations <- 50
total_losses <- numeric(num_simulations)
for (i in 1:num_simulations){
N <- rnbinom(1
,size=nbinom.est$estimate["size"]
, mu=nbinom.est$estimate["mu"] )
Z <- rlognormgpd(N,
lnmean = lnorm_model$estimate["meanlog"],
lnsd = lnorm_model$estimate["sdlog"],
u = 2,
sigmau = gpd.model$fitted.values["scale"],
xi = gpd.model$fitted.values["shape"])
total_losses[i] <- sum(Z)
}
library("evmix")
# ============================================================
# Import libraries and SAS OpRisk Global dataset
# ============================================================
install.packages("evmix")
library("evmix")
### (3) LDA with MCMC simulation
num_simulations <- 50
total_losses <- numeric(num_simulations)
for (i in 1:num_simulations){
N <- rnbinom(1
,size=nbinom.est$estimate["size"]
, mu=nbinom.est$estimate["mu"] )
Z <- rlognormgpd(N,
lnmean = lnorm_model$estimate["meanlog"],
lnsd = lnorm_model$estimate["sdlog"],
u = 2,
sigmau = gpd.model$fitted.values["scale"],
xi = gpd.model$fitted.values["shape"])
total_losses[i] <- sum(Z)
}
source("C:/Users/kwbae/OneDrive - postech.ac.kr/Repositories/risk-management-papers/code/Eling and Schnell (2020).r", echo=TRUE)
for (i in 1:num_simulations){
N <- rnbinom(1
,size=nbinom.est$estimate["size"]
, mu=nbinom.est$estimate["mu"] )+1
Z <- rlognormgpd(N,
lnmean = lnorm_model$estimate["meanlog"],
lnsd = lnorm_model$estimate["sdlog"],
u = 2,
sigmau = gpd.model$fitted.values["scale"],
xi = gpd.model$fitted.values["shape"])
total_losses[i] <- sum(Z)
}
mean_loss <- mean(total_losses)
quantiles <- quantile(total_losses, probs = c(0.5, 0.95, 0.99))
c(mean_loss)
### (3) LDA with MCMC simulation
num_simulations <- 50
total_losses <- numeric(num_simulations)
for (i in 1:num_simulations){
N <- rnbinom(1
,size=nbinom.est$estimate["size"]
, mu=nbinom.est$estimate["mu"] )+1
Z <- rlognormgpd(N,
lnmean = lnorm_model$estimate["meanlog"],
lnsd = lnorm_model$estimate["sdlog"],
u = 2,
sigmau = gpd.model$fitted.values["scale"],
xi = gpd.model$fitted.values["shape"])
total_losses[i] <- sum(Z)
}
mean_loss <- mean(total_losses)
quantiles <- quantile(total_losses, probs = c(0.5, 0.95, 0.99))
c(mean_loss)
plotdist(total_losses)
plotdist(log(total_losses))
X <- total_losses
mean(X) # in paper, E[X] is 3.2
sd(X) # in paper, std(X) is 116.4
# ============================================================
# Import libraries and SAS OpRisk Global dataset
# ============================================================
install.packages("quantmod")
library("quantmod")
var_99_5 <- quantile(X, 0.995)
quantile(X, 0.995)
mean(X[X > quantile(X, 0.995)])
mean(X[X > quantile(X, 0.99)])
### (3) LDA with MCMC simulation
num_simulations <- 10000
total_losses <- numeric(num_simulations)
for (i in 1:num_simulations){
N <- rnbinom(1
,size=nbinom.est$estimate["size"]
, mu=nbinom.est$estimate["mu"] )+1
Z <- rlognormgpd(N,
lnmean = lnorm_model$estimate["meanlog"],
lnsd = lnorm_model$estimate["sdlog"],
u = 2,
sigmau = gpd.model$fitted.values["scale"],
xi = gpd.model$fitted.values["shape"])
total_losses[i] <- sum(Z)
}
X <- total_losses
mean(X) # in paper, E[X] is 3.2
sd(X) # in paper, std(X) is 116.4
quantile(X, 0.995)
mean(X[X > quantile(X, 0.99)])
### (3) LDA with MCMC simulation
num_simulations <- 50
total_losses <- numeric(num_simulations)
for (i in 1:num_simulations){
N <- rnbinom(1
,size=nbinom.est$estimate["size"]
, mu=nbinom.est$estimate["mu"] )+1
Z <- rlognormgpd(N,
lnmean = lnorm_model$estimate["meanlog"],
lnsd = lnorm_model$estimate["sdlog"],
u = 2,
sigmau = gpd.model$fitted.values["scale"],
xi = gpd.model$fitted.values["shape"])
total_losses[i] <- sum(Z)
}
X <- total_losses
# (5) summary
mean(Z) # in paper, 43.9
mean(X) # in paper, E[X] is 3.2
sd(X) # in paper, std(X) is 116.4
quantile(X, 0.995)
mean(X[X > quantile(X, 0.99)])
### (3) LDA with MCMC simulation
num_simulations <- 50
total_losses <- numeric(num_simulations)
for (i in 1:num_simulations){
N <- rnbinom(1
,size=nbinom.est$estimate["size"]
, mu=nbinom.est$estimate["mu"] )+1
Z <- rlognormgpd(N,
lnmean = lnorm_model$estimate["meanlog"],
lnsd = lnorm_model$estimate["sdlog"],
u = 2,
sigmau = gpd.model$fitted.values["scale"],
xi = gpd.model$fitted.values["shape"])
total_losses[i] <- sum(Z)
}
X <- total_losses
# (5) summary
mean(Z) # in paper, 43.9
sd(Z) # in paper, 429.9
mean(log(Z)) # in paper, mean(ln(Z)) is 0.8
sd(log(Z)) # in paper, std(ln(Z)) is 2.1
mean(X) # in paper, E[X] is 3.2
sd(X) # in paper, std(X) is 116.4
quantile(X, 0.995)
mean(X[X > quantile(X, 0.99)])
summary(sas$Loss.Amount...M.)
describe(sas$Loss.Amount...M.)
subset(sas$Loss.Amount...M.)
# ============================================================
# Import libraries and SAS OpRisk Global dataset
# ============================================================
install.packages("psych")
library("psych")
describe(sas$Loss.Amount...M.)
